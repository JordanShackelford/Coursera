Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. 
In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would.
For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. 
You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer.
You will be required to prepare the dataset for the analysis you choose to do.
As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." 
It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. 
You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers.
If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.

Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10,000
ii. Business table = 10,000
iii. Category table = 10,000
iv. Checkin table = 10,000
v. elite_years table = 10,000
vi. friend table = 10,000
vii. hours table = 10,000
viii. photo table = 10,000
ix. review table = 10,000
x. tip table = 10,000
xi. user table = 10,000

2. Find the total distinct records by either the foreign key or primary key for each table.
   If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10,000 (id)
ii. Hours = 1,562 (business_id)
iii. Category = 2,643 (business_id)
iv. Attribute = 1,115 (business_id)
v. Review = 10,000 (id)
vi. Checkin = 493 (business_id)
vii. Photo = 10,000 (id)
viii. Tip = 3,979 (business_id)
ix. User = 10,000 (id)
x. Friend = 11 (user_id)
xi. Elite_years = 2,780 (user_id)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	

3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	SQL code used to arrive at answer:

	SELECT Count(*) 
	FROM USER 
	WHERE id = null 
	or name = null 
	or review_count = null
	or yelping_since = null 
	or useful = null 
	or funny = null 
	or cool = null
	or fans = null 
	or average_stars = null 
	or compliment_hot = null 
	or compliment_more = null
	or compliment_profile = null 
	or compliment_cute = null 
	or compliment_list = null
	or compliment_note = null 
	or compliment_plain = null 
	or compliment_cool = null
	or compliment_funny = null 
	or compliment_writer = null 
	or compliment_photos = null
	;
	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1	max: 5	avg: 3.7082
	
	ii. Table: Business, Column: Stars
	
		min: 1.0		max: 5.0		avg: 3.6549
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	v. Table: User, Column: Review_count
	
		min: 0	max: 2,000		avg: 24.2995

5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	select sum(review_count) as total_reviews_in_city, city
	from business
	group by city
	order by total_reviews desc
	
	Copy and Paste the Result Below:

	+-----------------------+-----------------+
	| total_reviews | city                    |
	+-----------------------+-----------------+
	|                 82854 | Las Vegas       |
	|                 34503 | Phoenix         |
	|                 24113 | Toronto         |
	|                 20614 | Scottsdale      |
	|                 12523 | Charlotte       |
	|                 10871 | Henderson       |
	|                 10504 | Tempe           |
	|                  9798 | Pittsburgh      |
	|                  9448 | Montréal        |
	|                  8112 | Chandler        |
	|                  6875 | Mesa            |
	|                  6380 | Gilbert         |
	|                  5593 | Cleveland       |
	|                  5265 | Madison         |
	|                  4406 | Glendale        |
	|                  3814 | Mississauga     |
	|                  2792 | Edinburgh       |
	|                  2624 | Peoria          |
	|                  2438 | North Las Vegas |
	|                  2352 | Markham         |
	|                  2029 | Champaign       |
	|                  1849 | Stuttgart       |
	|                  1520 | Surprise        |
	|                  1465 | Lakewood        |
	|                  1155 | Goodyear        |
	+-----------------------+-----------------+
	(Output limit exceeded, 25 of 362 total rows shown)
	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
	select stars,count(stars) 
	from business 
	where city='Avon'
	group by stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
	+-------+--------------+
	| stars | count(stars) |
	+-------+--------------+
	|   1.5 |            1 |
	|   2.5 |            2 |
	|   3.5 |            3 |
	|   4.0 |            2 |
	|   4.5 |            1 |
	|   5.0 |            1 |
	+-------+--------------+

ii. Beachwood

SQL code used to arrive at answer:
	select stars,count(stars) 
	from business 
	where city='Beachwood'
	group by stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
	+-------+--------------+
	| stars | count(stars) |
	+-------+--------------+
	|   2.0 |            1 |
	|   2.5 |            1 |
	|   3.0 |            2 |
	|   3.5 |            2 |
	|   4.0 |            1 |
	|   4.5 |            2 |
	|   5.0 |            5 |
	+-------+--------------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	select review_count,
    		name 
	from user
	order by review_count desc
	limit 3

	Copy and Paste the Result Below:
	+--------------+--------+
	| review_count | name   |
	+--------------+--------+
	|         2000 | Gerald |
	|         1629 | Sara   |
	|         1339 | Yuri   |
	+--------------+--------+

8. Does posing more reviews correlate with more fans?
	Please explain your findings and interpretation of the results:

	yes there appears to be a positive correlation between review_count and fans

	/* sqlite doesn't support corr() function for finding pearson coefficient so we gotta do it this way */
	SELECT range AS fans_range, 
		COUNT(*) AS num_user, 
		AVG(review_count) AS avg_num_review,     
		AVG(fans) AS avg_num_fans
	FROM (SELECT CASE  
				WHEN fans BETWEEN 0 AND 250 THEN '0 - 250'
				WHEN fans BETWEEN 250 AND 500 THEN '250 - 500'
				ELSE '500+' END AS range,
				review_count, 
				fans
		FROM user) AS subtable
	GROUP BY subtable.range
	
9. Are there more reviews with the word "love" or with the word "hate" in them?
	create a sequel query that has one column with the number of reviews with the word "love" and another column with the number of reviews with the word "hate" from review.text 

	SQL code used to arrive at answer:
	select count(*) as num_reviews_love, count(*) as num_reviews_hate
	from review
	where text like '%love%' or text like '%hate%'

	Answer:
	There are more reviews with the word "love" than with the word "hate"

	SQL code used to arrive at answer:
		SELECT sentiment, count(*) count
		FROM (
			SELECT CASE
					WHEN LOWER(text) LIKE '%love%' THEN 'love'
					WHEN LOWER(text) LIKE '%hate%' THEN 'hate' 
					END AS sentiment
			FROM review)
		GROUP BY sentiment
		ORDER BY count DESC	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	SELECT name, fans
	FROM user
	ORDER BY fans DESC
	LIMIT 10

	Copy and Paste the Result Below:
	+-----------+------+
	| name      | fans |
	+-----------+------+
	| Amy       |  503 |
	| Mimi      |  497 |
	| Harald    |  311 |
	| Gerald    |  253 |
	| Christine |  173 |
	| Lisa      |  159 |
	| Cat       |  133 |
	| William   |  126 |
	| Fran      |  124 |
	| Lissa     |  120 |
	+-----------+------+

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	I picked Pittsburgh and restaurants

i. Do the two groups you chose to analyze have a different distribution of hours?

ii. Do the two groups you chose to analyze have a different number of reviews?
	SQL query:
		SELECT business.city,
			business.neighborhood
			category.category,
			business.name,
			business.stars,
			business.review_count
		from business INNER JOIN category ON business.id = category.business_id
		WHERE city = 'Pittsburgh' and category = "Restaurants"

	Results:
	+------------+--------------+-------------+-----------------------+-------+--------------+
	| city       | neighborhood | category    | name                  | stars | review_count |
	+------------+--------------+-------------+-----------------------+-------+--------------+
	| Pittsburgh |              | Restaurants | Mad Mex - South Hills |   3.0 |          103 |
	| Pittsburgh | Oakland      | Restaurants | Papa Da Vinci         |   2.5 |           28 |
	+------------+--------------+-------------+-----------------------+-------+--------------+

	There were only 2 businesses in the restauraunts category in Pittsburgh, but yes, the one with 3.0 stars had more reviews than the one with 5 stars
	I think this could mean that less people want to eat there because of its low rating and so less people are reviewing it

iii. Are you able to infer anything from the location data provided between these two groups? Explain.
	There is only neighborhood data for one restaurant so we can't infer much from the neighborhood except that maybe Oakland has the worst restaurants in Pittsburgh
	If we look at lat and long, we see that 'Mad Mex - South Hills' has a lot of 40.3907 and a long of -80.0726, and 'Papa Da Vinci' has a lat of 40.4346 and a long of -79.9555. We could guess that north-east Pittsburgh has better restaurants than south-west Pittsburgh, but we really don't have a statistically significant amount of data to make that claim.

2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
	There are only 2 businesses in the restaurant category in pittsburgh and they're both open so I removed the "where city='pittsburgh' and category='restaurants'" from the query for a bigger dataset
i. Difference 1:
	Open businesses had 3.68 average stars and closed businesses had 3.52 average stars, a difference of 0.16
         
ii. Difference 2:
	Businesses that were closed had an average review count of 23.19 and businesses that were open had an average review count of 31.75. Closed difference had about 73% of the reviews of open businesses, on average.
SQL code used for analysis:
	select avg(stars),
		count(stars),
		avg(review_count),
		is_open
	from business
	group by is_open
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
	I will get the average lat and long of each business grouped by category and is_open. Then we will be able to make inferences based on categories of business' proximity to other business categories and how that affects their likelihood of closing.
           
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
	I want to compare different categories against eachother, but there are too many for me to use all of them so I choose to sort them by num of businesses and then use the top 10 categories.
	I run a query to identify the top categories of business:
		select count(*),
			category.category
		from business inner join category on business.id = category.business_id
		group by category.category
		order by count(*) desc
	And I get Restaurants, Shopping, Food, Nightlife, Bars, Health & Medical, Home Services, Beauty & Spas, Local Services, American (Traditional) as the top 10 (in order).

iii. Output of your finished dataset:
		+---------------+----------------+------------------------+---------+
		| avg(latitude) | avg(longitude) | category               | is_open |
		+---------------+----------------+------------------------+---------+
		|       36.4023 | -91.0202666667 | American (Traditional) |       0 |
		|    39.8715125 |       -91.2416 | American (Traditional) |       1 |
		|       38.2756 | -94.8015666667 | Bars                   |       0 |
		| 40.2586181818 | -89.4500090909 | Bars                   |       1 |
		|       33.3782 |       -111.936 | Beauty & Spas          |       0 |
		| 39.2091583333 | -94.1384833333 | Beauty & Spas          |       1 |
		| 36.6561333333 | -102.322433333 | Food                   |       0 |
		|     38.830675 |     -93.652175 | Food                   |       1 |
		|       43.6549 |       -79.3775 | Health & Medical       |       0 |
		|   35.04764375 |   -109.0308875 | Health & Medical       |       1 |
		|       35.1476 |       -80.7499 | Home Services          |       0 |
		| 35.8689133333 |     -104.32092 | Home Services          |       1 |
		|       34.2691 |      -96.21995 | Local Services         |       0 |
		|        37.285 |     -100.22097 | Local Services         |       1 |
		|       39.8736 |    -85.4913025 | Nightlife              |       0 |
		|      40.27825 |     -88.650825 | Nightlife              |       1 |
		| 39.6810777778 | -86.0268588889 | Restaurants            |       0 |
		| 41.1897320755 |  -82.427314717 | Restaurants            |       1 |
		|      33.94246 |      -112.5246 | Shopping               |       0 |
		|     39.231764 |     -87.007348 | Shopping               |       1 |
		+---------------+----------------+------------------------+---------+

Conclusions:
	I plotted these points in another application, https://www.desmos.com/calculator/mhq4hsncnh, to visualize the data and make inferences.
	I found that the "American" category was more likely to close if wasn't close enough to "Bars" and "Food".
	"Bars" were more likely to close if they were close to "Beauty and spas", more likely to be open if they were close to "Nightlife:
	"Beauty and spas" that were closed were too far away from the other businesses generally, but also closest to "Health & Medical". They were more likely to be open if they were next to food.
	"Food" was more likely to be closed if between "Home Services" and "Local Services", and more likely to be open if near "American" and "Beauty and spas"
	"Health & Medical" was more likely to be closed if near "Restaurants", and more likely to be open if near "Home Services".
	"Home Services" was more likely to be closed if near "Restaurants", and more likely to be open if between "Local Services" and "Health & Medical".
	"Local Services" were more likely to close if closer to "Food" and "Beauty and Spas" than "Home Services".
	"Nightlife" was more likely to be open if closer to "Bars" and "American" than to "Shopping".
	"Restaurants" were open if close to "Shopping" but not too close.
	"Shopping" was more likely to be open if near "Nightlife" and likely to be closed if near "Home Services".
                
iv. Provide the SQL code you used to create your final dataset:
	select avg(latitude),
		avg(longitude),
		category.category,
		is_open
	from business inner join category on business.id = category.business_id
	where category.category in ('Restaurants', 'Shopping', 'Food', 'Nightlife', 'Bars', 'Health & Medical', 'Home Services', 'Beauty & Spas', 'Local Services', 'American (Traditional)')
	group by category.category, business.is_open